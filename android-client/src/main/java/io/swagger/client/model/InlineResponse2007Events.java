/**
 * Prognostics as a Service API
 * The PaaS REST API exposes the GSAP prognostics architecture as an internet accessible service. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: christopher.a.teubert@nasa.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2007Events {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("timestamp")
  private Long timestamp = null;
  @SerializedName("system_id")
  private Long systemId = null;
  @SerializedName("component_id")
  private Long componentId = null;
  @SerializedName("time_of_event")
  private List<Double> timeOfEvent = null;
  @SerializedName("state")
  private List<Double> state = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getSystemId() {
    return systemId;
  }
  public void setSystemId(Long systemId) {
    this.systemId = systemId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getComponentId() {
    return componentId;
  }
  public void setComponentId(Long componentId) {
    this.componentId = componentId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Double> getTimeOfEvent() {
    return timeOfEvent;
  }
  public void setTimeOfEvent(List<Double> timeOfEvent) {
    this.timeOfEvent = timeOfEvent;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Double> getState() {
    return state;
  }
  public void setState(List<Double> state) {
    this.state = state;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2007Events inlineResponse2007Events = (InlineResponse2007Events) o;
    return (this.name == null ? inlineResponse2007Events.name == null : this.name.equals(inlineResponse2007Events.name)) &&
        (this.timestamp == null ? inlineResponse2007Events.timestamp == null : this.timestamp.equals(inlineResponse2007Events.timestamp)) &&
        (this.systemId == null ? inlineResponse2007Events.systemId == null : this.systemId.equals(inlineResponse2007Events.systemId)) &&
        (this.componentId == null ? inlineResponse2007Events.componentId == null : this.componentId.equals(inlineResponse2007Events.componentId)) &&
        (this.timeOfEvent == null ? inlineResponse2007Events.timeOfEvent == null : this.timeOfEvent.equals(inlineResponse2007Events.timeOfEvent)) &&
        (this.state == null ? inlineResponse2007Events.state == null : this.state.equals(inlineResponse2007Events.state));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.systemId == null ? 0: this.systemId.hashCode());
    result = 31 * result + (this.componentId == null ? 0: this.componentId.hashCode());
    result = 31 * result + (this.timeOfEvent == null ? 0: this.timeOfEvent.hashCode());
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2007Events {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  systemId: ").append(systemId).append("\n");
    sb.append("  componentId: ").append(componentId).append("\n");
    sb.append("  timeOfEvent: ").append(timeOfEvent).append("\n");
    sb.append("  state: ").append(state).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
